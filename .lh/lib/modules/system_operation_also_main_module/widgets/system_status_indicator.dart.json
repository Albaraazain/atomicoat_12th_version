{
    "sourceFile": "lib/modules/system_operation_also_main_module/widgets/system_status_indicator.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1726411660067,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1734535158990,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,45 +1,56 @@\n import 'package:flutter/material.dart';\r\n+import 'package:flutter_bloc/flutter_bloc.dart';\r\n import 'package:provider/provider.dart';\r\n import '../providers/system_state_provider.dart';\r\n-import '../providers/alarm_provider.dart';\r\n+import 'package:experiment_planner/features/alarm/bloc/alarm_bloc.dart';\r\n+import 'package:experiment_planner/features/alarm/bloc/alarm_state.dart';\r\n \r\n class SystemStatusIndicator extends StatelessWidget {\r\n   @override\r\n   Widget build(BuildContext context) {\r\n-    return Consumer2<SystemStateProvider, AlarmProvider>(\r\n-      builder: (context, systemProvider, alarmProvider, child) {\r\n-        SystemStatus status = _determineSystemStatus(systemProvider, alarmProvider);\r\n-        return GestureDetector(\r\n-          onTap: () => _showStatusDetails(context, status, systemProvider, alarmProvider),\r\n-          child: Row(\r\n-            children: [\r\n-              Icon(\r\n-                _getStatusIcon(status),\r\n-                color: _getStatusColor(status),\r\n-                size: 16,\r\n+    return Consumer<SystemStateProvider>(\r\n+      builder: (context, systemProvider, child) {\r\n+        return BlocBuilder<AlarmBloc, AlarmState>(\r\n+          builder: (context, alarmState) {\r\n+            SystemStatus status = _determineSystemStatus(systemProvider, alarmState);\r\n+            return GestureDetector(\r\n+              onTap: () => _showStatusDetails(context, status, systemProvider, alarmState),\r\n+              child: Row(\r\n+                children: [\r\n+                  Icon(\r\n+                    _getStatusIcon(status),\r\n+                    color: _getStatusColor(status),\r\n+                    size: 16,\r\n+                  ),\r\n+                  SizedBox(width: 8),\r\n+                  Text(\r\n+                    _getStatusText(status),\r\n+                    style: TextStyle(\r\n+                      color: _getStatusColor(status),\r\n+                      fontWeight: FontWeight.bold,\r\n+                    ),\r\n+                  ),\r\n+                ],\r\n               ),\r\n-              SizedBox(width: 8),\r\n-              Text(\r\n-                _getStatusText(status),\r\n-                style: TextStyle(\r\n-                  color: _getStatusColor(status),\r\n-                  fontWeight: FontWeight.bold,\r\n-                ),\r\n-              ),\r\n-            ],\r\n-          ),\r\n+            );\r\n+          },\r\n         );\r\n       },\r\n     );\r\n   }\r\n \r\n-  SystemStatus _determineSystemStatus(SystemStateProvider systemProvider, AlarmProvider alarmProvider) {\r\n-    if (alarmProvider.hasCriticalAlarm) {\r\n-      return SystemStatus.error;\r\n-    } else if (alarmProvider.hasActiveAlarms) {\r\n-      return SystemStatus.warning;\r\n-    } else if (systemProvider.isSystemRunning) {\r\n+  SystemStatus _determineSystemStatus(\r\n+      SystemStateProvider systemProvider, AlarmState alarmState) {\r\n+    if (alarmState is AlarmLoadSuccess) {\r\n+      if (alarmState.hasCriticalAlarm) {\r\n+        return SystemStatus.error;\r\n+      } else if (alarmState.hasActiveAlarms) {\r\n+        return SystemStatus.warning;\r\n+      }\r\n+    }\r\n+\r\n+    if (systemProvider.isSystemRunning) {\r\n       return SystemStatus.running;\r\n     } else if (systemProvider.isSystemReadyForRecipe()) {\r\n       return SystemStatus.ready;\r\n     } else {\r\n@@ -91,9 +102,10 @@\n         return 'Error';\r\n     }\r\n   }\r\n \r\n-  void _showStatusDetails(BuildContext context, SystemStatus status, SystemStateProvider systemProvider, AlarmProvider alarmProvider) {\r\n+  void _showStatusDetails(BuildContext context, SystemStatus status,\r\n+      SystemStateProvider systemProvider, AlarmState alarmState) {\r\n     showDialog(\r\n       context: context,\r\n       builder: (BuildContext context) {\r\n         return AlertDialog(\r\n@@ -107,10 +119,12 @@\n               Text('Is Running: ${systemProvider.isSystemRunning}'),\r\n               Text('Active Recipe: ${systemProvider.activeRecipe?.name ?? 'None'}'),\r\n               Text('Current Step: ${systemProvider.currentRecipeStepIndex + 1}/${systemProvider.activeRecipe?.steps.length ?? 0}'),\r\n               SizedBox(height: 8),\r\n-              Text('Active Alarms: ${alarmProvider.activeAlarms.length}'),\r\n-              Text('Critical Alarms: ${alarmProvider.criticalAlarms.length}'),\r\n+              if (alarmState is AlarmLoadSuccess) ...[\r\n+                Text('Active Alarms: ${alarmState.activeAlarms.length}'),\r\n+                Text('Critical Alarms: ${alarmState.criticalAlarms.length}'),\r\n+              ],\r\n             ],\r\n           ),\r\n           actions: [\r\n             TextButton(\r\n"
                }
            ],
            "date": 1726411660067,
            "name": "Commit-0",
            "content": "// widgets/system_status_indicator.dart\r\n\r\nimport 'package:flutter/material.dart';\r\nimport 'package:provider/provider.dart';\r\nimport '../providers/ald_system_provider.dart';\r\n\r\nclass SystemStatusIndicator extends StatelessWidget {\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Consumer<SystemStateProvider>(\r\n      builder: (context, provider, child) {\r\n        String statusText = provider.isSystemRunning ? 'Running' : 'Stopped';\r\n        Color statusColor = provider.isSystemRunning ? Colors.green : Colors.red;\r\n\r\n        return Row(\r\n          children: [\r\n            Icon(Icons.circle, color: statusColor, size: 12),\r\n            SizedBox(width: 4),\r\n            Text(\r\n              statusText,\r\n              style: TextStyle(\r\n                color: statusColor,\r\n                fontWeight: FontWeight.bold,\r\n              ),\r\n            ),\r\n          ],\r\n        );\r\n      },\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}